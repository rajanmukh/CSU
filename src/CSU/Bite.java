/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package CSU;

import GraphicElements.Border;
import GraphicElements.MultiLineText;
import GraphicElements.MyButton;
import GraphicElements.PSpace;
import GraphicElements.Rectangle;
import java.awt.Color;
import java.awt.GridBagConstraints;
import java.awt.GridBagLayout;
import java.awt.MenuComponent;
import java.awt.event.ActionEvent;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.SwingConstants;

/**
 *
 * @author rajan
 */
public class Bite extends javax.swing.JPanel {

   

    class GroupDetail {

        JLabel[] stats;
        Border b;

        public GroupDetail(String[] arr) {
            int noOfEntries = arr.length;
            MultiLineText[] labels = new MultiLineText[noOfEntries];
            stats = new JLabel[noOfEntries];
            PSpace[] spaces = new PSpace[noOfEntries];
            for (int i = 0; i < noOfEntries; i++) {

                labels[i] = new MultiLineText(arr[i]);
                labels[i].setOutlined(false);
                labels[i].setTextanchor(Rectangle.LEFT);
                labels[i].setFontsize(12);

                stats[i] = new JLabel("NORMAL");
                stats[i].setHorizontalAlignment(SwingConstants.CENTER);
                stats[i].setBackground(Color.GREEN);
                stats[i].setOpaque(true);
                spaces[i] = new PSpace(stats[i], 0.1, 0.1, 0.3, 0.1);
            }
            JPanel p = new JPanel();
            p.setLayout(new GridBagLayout());
            GridBagConstraints gridBagConstraints = new GridBagConstraints();
            gridBagConstraints.gridwidth = 1;
            gridBagConstraints.gridheight = 1;
            gridBagConstraints.fill = GridBagConstraints.BOTH;
            gridBagConstraints.weighty = 1.0 / noOfEntries;
            for (int i = 0; i < noOfEntries; i++) {
                gridBagConstraints.gridy = i;
                gridBagConstraints.gridx = 0;
                gridBagConstraints.weightx = 0.5;
                p.add(labels[i], gridBagConstraints);
                gridBagConstraints.gridx = 1;
                gridBagConstraints.weightx = 0.5;
                p.add(spaces[i], gridBagConstraints);
            }
            b = new Border(p);
        }
    }

    GroupDetail[] groups;
    MyButton[] buttons;

    public Bite() {
        initComponents();
        String[] names = new String[]{"POWER:SENSING:HARDWARE", "TSG:UNIT", "PRESSURIZER:UNIT",
            "RADAR:CONTROLLER:LINK", "SENSOR:ELECTRONICS:HARDWARE", "MODULATOR", "RF UNIT:COMMAND:VERIFICATION"};
        int noOfEntries = names.length;
        buttons = new MyButton[noOfEntries];
        PSpace[] spaces = new PSpace[noOfEntries];
        for (int i = 0; i < noOfEntries; i++) {
            buttons[i] = new MyButton(names[i]);            
            spaces[i] = new PSpace(buttons[i], 0.1, 0.1, 0.1, 0.1);
        }

        GridBagConstraints gridBagConstraints = new GridBagConstraints();
        gridBagConstraints.gridwidth = 1;
        gridBagConstraints.gridheight = 1;
        gridBagConstraints.fill = GridBagConstraints.BOTH;
        gridBagConstraints.weighty = 0.5;
        gridBagConstraints.weightx = 0.25;
        for (int i = 0; i < noOfEntries; i++) {
            gridBagConstraints.gridx = i % 4;
            gridBagConstraints.gridy = i / 4;
            add(spaces[i], gridBagConstraints);
        }
        groups = new GroupDetail[noOfEntries];
        {
            for (int i = 0; i < 6; i++) {
                groups[i] = new GroupDetail(new String[]{});
            }
        }
        String[] labels = new String[]{"RF UNIT POWER", "RADIATE", "REFLECTED POWER", "WG ARC DETECTOR",
            "VSWR", "TX OUTPUT POWER"};

        groups[6] = new GroupDetail(labels);
    }

    public JPanel getSubPanel(ActionEvent e) {
        int index = 0;
        for (int i = 0; i < groups.length; i++) {
            if (e.getSource().equals(buttons[i])) {
                index = i;
                break;
            }
        }
        return groups[index].b;
    }

    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setLayout(new java.awt.GridBagLayout());
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
